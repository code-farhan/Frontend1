%h2 Change parallelism for
  %span{data-bind: "text: project_name"}
/ ko if: loading_billing
.loading-spinner
  != HAML.spinner({})
/ /ko

.parallelism-picker{data-bind: "ifnot: loading_billing"}

  .try-out-build{data-bind: "if: show_test_new_settings"}
    != HAML.branch_picker({button_binding: "click: create_settings_build"})

  %form.parallelism-items{data-bind: "foreach: parallelism_options"}
    %label{data-bind: "css: $parent.parallel_label_style($data),
           attr: { for: $parent.parallel_input_id($data)},
           event: {mouseover: $parent.parallel_focus_in}"}
      %span{data-bind: "text: $data"}

      .parallelism-upgrades

        / ko if: $parent.billing.paid

        .insufficient-plan{data-bind: "if: $parent.show_upgrade_plan"}
          Your plan only allows up to <span data-bind='text: $parent.plan().max_parallelism'></span> parallelism.
          %a{data-bind: "attr: {href: CI.paths.org_settings($parent.org_name(), 'plan')}"} Upgrade

        .insufficient-containers{data-bind: "if: $parent.show_add_containers"}
          Not enough containers available.
          %a{data-bind: "attr: {href: CI.paths.org_settings($parent.org_name(), 'containers')}"} Add More

        / /ko

        / ko if: $parent.billing.trial

        .insufficient-trial{data-bind: "if: $parent.show_upgrade_trial"}
          Trials only come with <span data-bind='text: $parent.billing.usable_containers'></span> available containers.
          %a{data-bind: "attr: {href: CI.paths.org_settings($parent.org_name(), 'plan')}"} Add a plan

        / /ko

      .insufficient-minimum
        Unsupported. Upgrade or lower parallelism.
        %i.fa.fa-question-circle{data-bind: "tooltip: {animation: false, placement: 'top', title: $parent.too_much_parallelism_text}"}
        %a{data-bind: "attr: {href: CI.paths.org_settings($parent.org_name(), 'containers')}"} Upgrade

      %input{type: "radio", name: "parallel", data-bind: "value: $data,
            checked: $parent.editParallel,
            disable: $parent.disable_parallel_input($data),
            click: $parent.set_parallelism,
            attr: { id: $parent.parallel_input_id($data), 'data-loading-text': $data, 'data-success-text': $data, 'data-failed-text': $data}"}

.mini-faq
  .mini-faq-item
    %h3 What are containers?
    %p{data-bind: "with: billing"}
      Containers are what we call the virtual machines that your tests run in. Your current plan has
      %span{data-bind: "text: containers"}
      containers
      %span{data-bind: "with: chosenPlan"}
        %span{data-bind: "if: allowsParallelism"}
          and supports up to
          != succeed "x", ->
            %span{data-bind: "text: max_parallelism"}
          paralellism.
        %span{data-bind: "ifnot: allowsParallelism"}
          but does not support parallelism.
    %p With 16 containers you could run:
      %ul
        %li 16 simultaneous builds at 1x parallelism
        %li 8 simultaneous builds at 2x parallelism
        %li 4 simultaneous builds at 4x parallelism
        %li 2 simultaneous builds at 8x parallelism
        %li 1 build at 16x parallelism
  .mini-faq-item
    %h3 What is parallelism?
    %p We split your tests into groups, and run each group on different machines in parallel. This allows them run in a fraction of the time, for example:
    %p
      %ul
        %li a 45 minute build fell to 18 minutes with 3x build speed,
        %li a 20 minute build dropped to 11 minutes with 2x build speed.
    %p Each machine is completely separated (sandboxed and firewalled) from the others, so that your tests can't conflict with each other: separate databases, file systems, process space, and memory.
    %p For RSpec, Cucumber and Test::Unit, we'll automatically run your tests, splitting them appropriately among different machines. If you have a different test suite, you can <a href="/docs/parallel-manual-setup">control the parallelism directly</a>.
  .mini-faq-item
    %h3 What do others think?
    %blockquote <i>The thing that sold us on Circle was the speed. Their tests run really really fast. We've never seen that before. One of our developers just pushes to branches so that Circle will run his tests, instead of testing on his laptop. The parallelization just works - we didn't have to tweak anything. Amazing service.</i>
    %ul
      %li
        %a{ href: "http://zencoder.com/company/" } Brandon Arbini
      %li
        %a{ href: "http://zencoder.com/" } Zencoder.com
