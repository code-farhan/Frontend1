<!-- ko if: usage_queue_visible -->

  .build-queue{data-bind: "css: {active: usage_queue_visible}"}

    <!-- ko ifnot: usage_queue_why -->
      .loading-spinner
        != HAML.spinner({})
    <!-- /ko -->

    <!-- ko if: usage_queue_why -->

      <!-- ko ifnot: usage_queued -->
        %p
          %span Circle
          %span{data-bind: "ifnot: run_queued"} has
          %span spent
          %span{data-bind: "duration: run_queued_time"}
          %span acquiring containers for this build. 
        <!-- ko if: (run_queued_time() > 10000) -->
          %p{:id => "circle_queued_explanation"}
            %span We're sorry; this is our fault. Typically you should only see this when load spikes overwhelm our auto-scaling; waiting to acquire containers should be brief and infrequent.
        <!-- /ko -->
      <!-- /ko -->

      <!--  ko if: usage_queue_why().length -->
        %p
          %span This build
          %span{data-bind: "if: usage_queued"} has been
          %span{data-bind: "ifnot: usage_queued"} was
          %span queued behind the following builds for
          %span{data-bind: "duration: usage_queued_time"}
        != HAML.recent_builds_table({builds: "usage_queue_why", mention_project: true, actions: true})
      <!-- /ko -->

      <!-- ko if: (run_queued_time() < 10000) -->
        <!--  ko with: $root.project -->
          <!-- ko if: billing.existing_plan_loaded -->
            %p{:id => "additional_containers_offer"}
              %span Too much waiting? You can
              %a{data-bind: "attr: {href: CI.paths.org_settings(billing.org_name(), 'plan')}"} add more containers
              %span and finish even faster.
          <!-- /ko -->
        <!-- /ko -->
      <!-- /ko -->

    <!-- /ko -->

<!-- /ko -->
