.row.faq
  %h2 Billing FAQ
  %section
    %h4 Who is included in my plan?
    %p Your plan covers any number of GitHub organization or personal accounts. All pushes to those organizations will be tested, and will use your available containers.
  %section
    %h4 How do containers work?
    %p Every time you push to GitHub, we checkout your code and run your build inside of a container. If you don't have enough free containers available, then your pushes queue up until other builds finish.
    %p You can buy containers at $50 each to run multiple builds simultaneously.
    %p You can use our parallelism to speed up your test suite. We automatically split your tests across multiple containers, finishing your build in a fraction of the time.
    %p For example, with 4 containers you can run 4 simultaneous builds at 1x parallelism or 2 simultaneous builds in half the time at 2x parallelism.
  %section
    %h4 How many containers do I need?
    %p This very much depends on the team size, frequency of pushing, and the length of your test suite. Small teams with short tests who push frequently should only need one. A team of 20 full-time developers, with a 15 minute test suite, who push 5 times a day each, will probably need 6-8 containers.
  %section
    %h4 Are there any extra charges?
    %p Circle has no extra charges in any of our standard plans. You have unlimited testing time, unlimited builds, unlimited anything which is not enumerated here. We don't believe that we should incentivise you to test less.
  %section
    %h4 Really? Unlimited?
    %p For practical purposes, our plans are unlimited. You won't be cut off for pushing too frequently, having a long test suite, or anything like that. However, like all services, we reserve the right to restrict abusive behaviour. If you're pushing a 10 hour test suite every minute, we won't feel bad about cutting you off.
  %section
    %h4 Why should I pay for this instead of using Jenkins?
    %p Maintaining a CI server takes considerable time - we estimate about 8% of a team's time is spent on maintaining their build infrastructure (of course, much more is wasted if you don't have build infrastructure, but that's a separate question). Circle allows you to buy back this productivity, and let you focus on building your product.
    %p With Circle, you'll never have to buy machines, install plugins, refactor the test suite for speed, or spend any time on your test infrastructure. With Circle, you don't need to worry about your tools - just focus on the product and leave the tools to us.
  %section
    %h4 How does parallelism work? Isn't that error-prone?
    %p Most parallelism libraries are aimed at running on single machines, and so can be error-prone. We have found that it is hard to make parallelism work when the parallel tests share the same address-space, heap, run-time, process, database or even the same file-system.
    %p Circle instead splits the tests and runs them in separate containers. Each container is completely separate, with no shared code, no shared databases, no shared anything. Our customers have found it to be very reliable.
  %section
    %h4 Why use containers for pricing?
    %p After talking to our users, we based our pricing on two important principles: charge in a fair way, and align our incentives with yours. We did some experiments with per-user pricing, but eventually decided that the fairest way is to let people pay for the resources they consume.
    %p It's fair because it scales with the amount of work your team generates. At the same time, it's affordable for teams of all size.
    %p Most importantly, it allows us to maximize your productivity, without limits on builds or testing time. Circle works to make you as productive as possible, and we won't let our pricing get in the way.
  %section
    %h4 My team needs something not listed here
    %p
      Contact us at
      %a{:href => "mailto:enterprise@circleci.com"} enterprise@circleci.com
      to discuss the benefits of an enterprise plan.
