:coffeescript
  # TODO: Make these annotations on defapi
  api_data =
    'me':
      description: "Provides information about the signed in user."
      method: "GET"
      response: """
        {
          "basic_email_prefs" : "smart", // can be "smart", "none" or "all"
          "login" : "pbiggar" // your github username
        }
        """
    'projects':
      description: "List of all the projects you're following on CircleCI, with build information organized by branch."
      method: "GET"
      response: """
        [ {
          "vcs_url": "https://github.com/circleci/mongofinil",
          "followed": true, // true if you follow this project in CircleCI
          "username": "circleci",
          "reponame": "mongofinil",
          "branches" : {
            "master" : {
              "pusher_logins" : [ "pbiggar", "arohner" ], // users who have pushed
              "last_non_success" : { // last failed build on this branch
                "pushed_at" : "2013-02-12T21:33:14Z",
                "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
                "build_num" : 22,
                "outcome" : "failed",
                },
              "last_success" : { // last successful build on this branch
                "pushed_at" : "2012-08-09T03:59:53Z",
                "vcs_revision" : "384211bbe72b2a22997116a78788117b3922d570",
                "build_num" : 15,
                "outcome" : "success",
                },
              "recent_builds" : [ { // last 5 builds, ordered by pushed_at (decreasing)
                "pushed_at" : "2013-02-12T21:33:14Z",
                "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
                "build_num" : 22,
                "outcome" : "failed",
                }, {
                "pushed_at" : "2013-02-11T03:09:54Z",
                "vcs_revision" : "0553ba86b35a97e22ead78b0d568f6a7c79b838d",
                "build_num" : 21,
                "outcome" : "failed",
                }, ... ],
              "running_builds" : [ ] // currently running builds
            }
          }
        }, ... ]
             """
    'project/:username/:project':
      description: "Build summary for each of the last 30 builds for a single git repo."
      method: "GET"
      params: [
            name: "limit"
            description: "The number of builds to return. Maximum 100, defaults to 30."
            example: 20
          ,
            name: "offset"
            description: "The API returns builds starting from this offset, defaults to 0."
            example: 5
          ]
      response: """
      [ {
        "vcs_url" : "https://github.com/circleci/mongofinil",
        "build_url" : "https://circleci.com/gh/circleci/mongofinil/22",
        "build_num" : 22,
        "branch" : "master",
        "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
        "committer_name" : "Allen Rohner",
        "committer_email" : "arohner@gmail.com",
        "subject" : "Don't explode when the system clock shifts backwards",
        "body" : "", // commit message body
        "why" : "github", // short string explaining the reason we built
        "dont_build" : null, // reason why we didn't build, if we didn't build
        "queued_at" : "2013-02-12T21:33:30Z" // time build was queued
        "start_time" : "2013-02-12T21:33:38Z", // time build started running
        "stop_time" : "2013-02-12T21:34:01Z", // time build finished running
        "build_time_millis" : 23505,
        "username" : "circleci",
        "reponame" : "mongofinil",
        "lifecycle" : "finished",
        "outcome" : "failed",
        "status" : "failed",
        "retry_of" : null, // build_num of the build this is a retry of
        "previous" : { // previous build
          "status" : "failed",
          "build_num" : 21
        }, ... ]
        """
    'recent-builds':
      description: "Build summary for each of the last 30 recent builds, ordered by build_num."
      method: "GET"
      params: [
          name: "limit"
          description: "The number of builds to return. Maximum 100, defaults to 30."
          example: 20
        ,
          name: "offset"
          description: "The API returns builds starting from this offset, defaults to 0."
          example: 5
        ]
      response: """
      [ {
        "vcs_url" : "https://github.com/circleci/mongofinil",
        "build_url" : "https://circleci.com/gh/circleci/mongofinil/22",
        "build_num" : 22,
        "branch" : "master",
        "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
        "committer_name" : "Allen Rohner",
        "committer_email" : "arohner@gmail.com",
        "subject" : "Don't explode when the system clock shifts backwards",
        "body" : "", // commit message body
        "why" : "github", // short string explaining the reason we built
        "dont_build" : null, // reason why we didn't build, if we didn't build
        "queued_at" : "2013-02-12T21:33:30Z" // time build was queued
        "start_time" : "2013-02-12T21:33:38Z", // time build started
        "stop_time" : "2013-02-12T21:34:01Z", // time build finished
        "build_time_millis" : 23505,
        "username" : "circleci",
        "reponame" : "mongofinil",
        "lifecycle" : "finished",
        "outcome" : "failed",
        "status" : "failed",
        "retry_of" : null, // build_num of the build this is a retry of
        "previous" : { // previous build
          "status" : "failed",
          "build_num" : 21
        }, ... ]
        """
    'project/:username/:project/:build_num':
      description: "Full details for a single build. The response includes all of the fields from the build summary. This is also the payload for the <a href='/docs/configuration#notify'>notification webhooks</a>, in which case this object is the value to a key named 'payload'."
      method: "GET"
      response: """
        {
          "vcs_url" : "https://github.com/circleci/mongofinil",
          "build_url" : "https://circleci.com/gh/circleci/mongofinil/22",
          "build_num" : 22,
          "branch" : "master",
          "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
          "committer_name" : "Allen Rohner",
          "committer_email" : "arohner@gmail.com",
          "subject" : "Don't explode when the system clock shifts backwards",
          "body" : "", // commit message body
          "why" : "github", // short string explaining the reason the build ran
          "dont_build" : null, // reason why we didn't build, if we didn't build
          "queued_at" : "2013-02-12T21:33:30Z" // time build was queued
          "start_time" : "2013-02-12T21:33:38Z", // time build started
          "stop_time" : "2013-02-12T21:34:01Z", // time build finished
          "build_time_millis" : 23505,
          "username" : "circleci",
          "reponame" : "mongofinil",
          "lifecycle" : "finished",
          "outcome" : "success", // all successful builds have "success"
          "status" : "success",
          "retry_of" : null, // build_num of the build this is a retry of
          "steps" : [ {
            "name" : "configure the build",
            "actions" : [ {
              "bash_command" : null,
              "run_time_millis" : 1646,
              "start_time" : "2013-02-12T21:33:38Z",
              "end_time" : "2013-02-12T21:33:39Z",
              "name" : "configure the build",
              "command" : "configure the build",
              "exit_code" : null,
              "type" : "infrastructure",
              "index" : 0,
              "status" : "success",
            } ] },

            "name" : "lein2 deps",
            "actions" : [ {
              "bash_command" : "lein2 deps",
              "run_time_millis" : 7555,
              "start_time" : "2013-02-12T21:33:47Z",
              "command" : "((lein2 :deps))",
              "messages" : [ ],
              "step" : 1,
              "exit_code" : 0,
              "end_time" : "2013-02-12T21:33:54Z",
              "index" : 0,
              "status" : "success",
              "type" : "dependencies",
              "source" : "inference",
              "failed" : null
            } ] },
            "name" : "lein2 trampoline midje",
            "actions" : [ {
              "bash_command" : "lein2 trampoline midje",
              "run_time_millis" : 2310,
              "continue" : null,
              "parallel" : true,
              "start_time" : "2013-02-12T21:33:59Z",
              "name" : "lein2 trampoline midje",
              "command" : "((lein2 :trampoline :midje))",
              "messages" : [ ],
              "step" : 6,
              "exit_code" : 1,
              "end_time" : "2013-02-12T21:34:01Z",
              "index" : 0,
              "status" : "failed",
              "timedout" : null,
              "infrastructure_fail" : null,
              "type" : "test",
              "source" : "inference",
              "failed" : true
            } ]
          } ],
          ...
        }
        """
    'project/:username/:project/:build_num/artifacts':
      description: "List the artifacts produced by a given build."
      method: "GET"
      response: """
        [
          {
            node_index: 0,
            path: "/tmp/circle-artifacts.NHQxLku/cherry-pie.png",
            pretty_path: "$CIRCLE_ARTIFACTS/cherry-pie.png",
            url: "https://circleci.com/gh/circleci/mongofinil/22/artifacts/0/tmp/circle-artifacts.NHQxLku/cherry-pie.png"
          },
          {
            node_index: 0,
            path: "/tmp/circle-artifacts.NHQxLku/rhubarb-pie.png",
            pretty_path: "$CIRCLE_ARTIFACTS/rhubarb-pie.png",
            url: "https://circleci.com/gh/circleci/mongofinil/22/artifacts/0/tmp/circle-artifacts.NHQxLku/rhubarb-pie.png"
          }
        ]
        """
    'project/:username/:project/:build_num/retry':
      description: "Retries the build, returns a summary of the new build."
      method: "POST"
      response: """
        {
          "vcs_url" : "https://github.com/circleci/mongofinil",
          "build_url" : "https://circleci.com/gh/circleci/mongofinil/23",
          "build_num" : 23,
          "branch" : "master",
          "vcs_revision" : "1d231626ba1d2838e599c5c598d28e2306ad4e48",
          "committer_name" : "Allen Rohner",
          "committer_email" : "arohner@gmail.com",
          "subject" : "Don't explode when the system clock shifts backwards",
          "body" : "", // commit message body
          "why" : "retry", // short string explaining the reason we built
          "dont_build" : null, // reason why we didn't build, if we didn't build
          "queued_at" : "2013-04-12T21:33:30Z" // time build was queued
          "start_time" : "2013-04-12T21:33:38Z", // time build started running
          "stop_time" : "2013-04-12T21:34:01Z", // time build finished running
          "build_time_millis" : 23505,
          "username" : "circleci",
          "reponame" : "mongofinil",
          "lifecycle" : "queued",
          "outcome" : null,
          "status" : "queued",
          "retry_of" : 22, // build_num of the build this is a retry of
          "previous" : { // previous build
            "status" : "failed",
            "build_num" : 22
          }
        }
        """
    'project/:username/:project/:build_num/cancel':
      description: "Cancels the build, returns a summary of the build."
      method: "POST"
      response: """
        {
          "vcs_url" : "https://github.com/circleci/mongofinil",
          "build_url" : "https://circleci.com/gh/circleci/mongofinil/26",
          "build_num" : 26,
          "branch" : "master",
          "vcs_revision" : "59c9c5ea3e289f2f3b0c94e128267cc0ce2d65c6",
          "committer_name" : "Allen Rohner",
          "committer_email" : "arohner@gmail.com",
          "subject" : "Merge pull request #6 from dlowe/master"
          "body" : "le bump", // commit message body
          "why" : "retry", // short string explaining the reason we built
          "dont_build" : null, // reason why we didn't build, if we didn't build
          "queued_at" : "2013-05-24T19:37:59.095Z" // time build was queued
          "start_time" : null, // time build started running
          "stop_time" : null, // time build finished running
          "build_time_millis" : null,
          "username" : "circleci",
          "reponame" : "mongofinil",
          "lifecycle" : "queued",
          "outcome" : "canceled",
          "status" : "canceled",
          "canceled" : true,
          "retry_of" : 25, // build_num of the build this is a retry of
          "previous" : { // previous build
            "status" : "success",
            "build_num" : 25
          }
        }
        """
    'project/:username/:project/tree/:branch':
      description: "Triggers a new build, returns a summary of the build. <a href='/docs/parameterized-builds'>Optional build parameters can be set using an experimental API</a>."
      method: "POST"
      response: """
        {
          "author_name": "Allen Rohner",
          "feature_flags": {},
          "build_url": "https://circleci.com/gh/circleci/mongofinil/54",
          "reponame": "mongofinil",
          "failed": null,
          "infrastructure_fail": false,
          "canceled": false,
          "all_commit_details": [
            {
              "author_name": "Allen Rohner",
              "commit": "f1baeb913288519dd9a942499cef2873f5b1c2bf",
              "author_login": "arohner",
              "committer_login": "arohner",
              "committer_name": "Allen Rohner",
              "body": "Minor version bump",
              "author_date": "2014-04-17T08:41:40Z",
              "committer_date": "2014-04-17T08:41:40Z",
              "commit_url": "https://github.com/circleci/mongofinil/commit/f1baeb913288519dd9a942499cef2873f5b1c2bf",
              "committer_email": "arohner@gmail.com",
              "author_email": "arohner@gmail.com",
              "subject": "Merge pull request #15 from circleci/minor-version-bump"
            }
          ],
          "previous": {
            "build_num": 53,
            "status": "success",
            "build_time_millis": 55413
          },
          "ssh_enabled": null,
          "author_email": "arohner@gmail.com",
          "why": "edit",
          "build_time_millis": null,
          "committer_email": "arohner@gmail.com",
          "parallel": 1,
          "retries": null,
          "compare": null,
          "dont_build": null,
          "committer_name": "Allen Rohner",
          "usage_queued_at": "2014-04-29T12:56:55.338Z",
          "branch": "master",
          "body": "Minor version bump",
          "author_date": "2014-04-17T08:41:40Z",
          "node": null,
          "committer_date": "2014-04-17T08:41:40Z",
          "start_time": null,
          "stop_time": null,
          "lifecycle": "not_running",
          "user": {
            "email": "arohner@gmail.com",
            "name": "Allen Rohner",
            "login": "arohner",
            "is_user": true
          },
          "subject": "Merge pull request #15 from circleci/minor-version-bump",
          "messages": [],
          "job_name": null,
          "retry_of": null,
          "previous_successful_build": {
            "build_num": 53,
            "status": "success",
            "build_time_millis": 55413
          },
          "outcome": null,
          "status": "not_running",
          "vcs_revision": "f1baeb913288519dd9a942499cef2873f5b1c2bf",
          "build_num": 54,
          "username": "circleci",
          "vcs_url": "https://github.com/circleci/mongofinil",
          "timedout": false
        }
        """
    'project/:username/:project/build-cache':
      description: "Clears the cache for a project"
      method: "DELETE"
      response: """
        {
          "status" : "build caches deleted"
        }
        """
    "user/ssh-key":
      description: "Adds a CircleCI key to your Github User account."
      method: "POST"
    "user/heroku-key":
      method: "POST"
      description: "Adds your Heroku API key to CircleCI, takes apikey as form param name."

-# (def api1-project-settings "/api/v1/project/:username/:project/settings")
-# (def api1-save-preferences "/api/v1/user/save-preferences")
-# (def api1-project-follow "/api/v1/project/:username/:project/follow")
-# (def api1-project-unfollow "/api/v1/project/:username/:project/unfollow")
-# (def api1-project-heroku-deploy-user "/api/v1/project/:username/:project/heroku-deploy-user")


- @title = 'CircleCI REST API'
- @lastUpdated = "Aug 23, 2012"


%h2#intro The CircleCI API
%p
  The CircleCI API is a RESTy, fully-featured API that allows you to do almost anything in CircleCI.
  You can access all information and trigger all actions.
  The only thing we don't provide access to is billing functions, which must be done from the CircleCI web UI.

%h2 Getting started
%ol
  %li
    Add an API token from your
    != succeed '.', ->
      %a{ href: "/account/api"} account dashboard

  %li
    To test it,
    %a{href: "/api/v1/me", target: "_blank"} view it in your browser
    or call the API using <code>curl</code>:
    %pre
      %code.bash<>
        :preserve
          $ curl https://circleci.com/api/v1/me?circle-token=:token

  %li
    You should see a response like the following:
    %pre{style: "overflow:scroll"}
      %code.no-highlight{style: "overflow:scroll"}<>
        :preserve
          {
            "user_key_fingerprint" : null,
            "days_left_in_trial" : -238,
            "plan" : "p16",
            "trial_end" : "2011-12-28T22:02:15Z",
            "basic_email_prefs" : "smart",
            "admin" : true,
            "login" : "pbiggar"
          }

%h2#calling Making calls
%p
  All API calls are made in the same way, by making standard HTTP calls, using JSON, a content-type, and your API token.
  All CircleCI API endpoints begin with
  <code>"https://circleci.com/api/v1/"</code>.

%h2 Authentication
%p
  To authenticate, add an API token using your
  != succeed '.', ->
    %a{ href: "/account/api"} account dashboard
  To use the API token, add it to the
  %code circle-token
  query param, like so:

%pre
  %code.no-highlight<>
    :preserve
      curl https://circleci.com/api/v1/me?circle-token=:token

%h2 Accept header
%p
  If you specify no accept header, we'll return human-readable JSON with comments.
  If you prefer to receive compact JSON with no whitespace or comments, add the <code>"application/json" Accept header</code>.
  Using <code>curl</code>:

%pre
  %code.no-highlight<>
    :preserve
      curl https://circleci.com/api/v1/me?circle-token=:token -H "Accept: application/json"


%h2 User
!= HAML['api_reference_block']({api_data: api_data, url: "me", try_it: true})


%h2 Projects
!= HAML['api_reference_block']({api_data: api_data, url: 'projects', try_it: true})


%h2#recent-builds Recent Builds Across All Projects
!= HAML['api_reference_block']({api_data: api_data, url: 'recent-builds', try_it: true})


%h2#recent-builds-project Recent Builds For a Single Project
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project'})
%p
  You can narrow the builds to a single branch by appending /tree/:branch to the url:
  %p
    %code.no-highlight https://circleci.com/api/v1/project/:username/:project/tree/:branch
  The branch name should be url-encoded.


%h2#build Single Build
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/:build_num'})

%h2#build-artifacts Artifacts of a Build
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/:build_num/artifacts'})

%h2#retry-build Retry a Build
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/:build_num/retry'})

%p
  You can retry a build with ssh by swapping "retry" with "ssh":
%p
  %code.no-highlight https://circleci.com/api/v1/project/:username/:project/:build_num/ssh


%h2#cancel-build Cancel a Build
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/:build_num/cancel'})

%h2#new-build Trigger a new Build
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/tree/:branch'})


%h2#clear-cache Clear Cache
!= HAML['api_reference_block']({api_data: api_data, url: 'project/:username/:project/build-cache'})


%h2 Summary

%p All Circle API endpoints begin with
  != succeed ".", ->
    %code "https://circleci.com/api/v1/"

%dl.dl-horizontal
- for own url, data of api_data
  %dt
    = "#{data.method}: /#{url}"
  %dd
    != data.description