- @title = "Generating code coverage metrics"
- @lastUpdated = "Sep 12, 2013"
- @short_title = "Code Coverage"

%p
  Code Coverage tells you how much of your application is tested.

%p
  CircleCI provides a number of different options for code coverage reporting,
  using built-in CircleCI features combined with open source libraries,
  or using partners.

%h2 See coverage in CircleCI

%p
  It's straightforward to see simple coverage results from your build.
  Simply add a coverage library to your project, and configure it to write the results out to CircleCI's
  != succeed '.', ->
    %a{href: "/docs/build-artifacts"} artifacts directory
  CircleCI will upload coverage results and make them visible as part of your build.

%h3 Adding and configuring a coverage library

%h4 Ruby

%p
  In Ruby 1.9, you add the
  %a{href: "https://github.com/colszowka/simplecov"} simplecov gem
  and configure your test suite to add code coverage.

%p In your Gemfile, add the <code>simplecov</code> gem:

%pre
  %code<>
    :preserve
      gem 'simplecov', :require => false, :group => :test

%p
  In <code>test/test_helper.rb</code>, <code>spec/spec_helper.rb</code>,
  Cucumber's <code>env.rb</code>,
  or in your test suite's startup hooks, initialize <code>SimpleCov</code>:

%pre
  %code<>
    :preserve
      if ENV['CIRCLE_ARTIFACTS']
        require 'simplecov'
        dir = File.join("..", "..", "..", ENV['CIRCLE_ARTIFACTS'], "coverage")
        SimpleCov.coverage_dir(dir)
      end

%h4 Python, Node, Java, PHP, etc

%p
  We're working on a guide for other languages.
  In the meantime, add your coverage library of choice. Options include:

%ul
  %li
    %a{href: "https://pypi.python.org/pypi/coverage"} coverage
    for python
  %li
    %a{href: "https://github.com/piuccio/node-coverage"} node-coverage,
    %a{href: "https://github.com/alex-seville/blanket"} blanket.js,
    %a{href: "https://github.com/fishbar/jscoverage"} jscoverage
    or
    %a{href: "https://github.com/gotwarlost/istanbul"} istanbul
    for Node
  %li
    %a{href: "https://github.com/sebastianbergmann/php-code-coverage"} php-code-coverage
    or
    %a{href: "https://github.com/atoum/atoum"} Atoum
    for PHP
  %li
    %a{href: "http://gcc.gnu.org/onlinedocs/gcc/Gcov.html"} gcc's <code>gcov</code>
    for C or C++.

%p
  Configure your library to save results in the directory specified by the CIRCLE_ARTIFACTS environment variable.
  Alternatively, add a
  %a{href: "/docs/configuration#tests"} test.post command
  to copy your artifacts into the
  %a{href: "/docs/build-artifacts"} artifacts directory.


%h3 Seeing the results in the CircleCI UI

%p
  We will upload your coverage files, which will allow you view them from your build page.
  These are available via a dropdown in your build:

%img{src: assetPath('(asset-path "img/outer/docs/artifacts_listing.png")')}

%p
  You can also get them via the
  != succeed ".", ->
    %a{href: "https://circleci.com/docs/api#build-artifacts"} CircleCI API

%p
  And then of course, by viewing the generated HTML,
  you can see beautifully rendered HTML in the UI.

%img{src: assetPath('(asset-path "img/outer/docs/coverage_example.png")')}


%h2 Using a Code Coverage service

%h3#coveralls Using Code Coverage with CircleCI and Coveralls

%p
  If you're a Coveralls customer, follow
  %a{href: "https://coveralls.io/docs"} their guide to set up your coverage stats.
  You'll need to add
  %code COVERALLS_REPO_TOKEN
  to your CircleCI
  %a{ href: "https://circleci.com/docs/environment-variables"} environment variables.

%p
  Coveralls does not currently support CircleCI's parallelization.
  != HAML.contact_us({wording: "Contact us"})
  if you'd like to use this.


%h3#code-climate Using Code Coverage with CircleCI and Code Climate

%p
  If you're a Code Climate customer, follow the instructions under
  %b Repo Settings -> Test Coverage
  from your repo on the Code Climate site.
  You'll need to add your
  %code CODECLIMATE_REPO_TOKEN
  to your CircleCI
  %a{ href: "https://circleci.com/docs/environment-variables"} environment variables.

%p
  Code Climate does not currently support CircleCI's parallelization.
  != HAML.contact_us({wording: "Contact us"})
  if you'd like to use this.


%h2 Under construction

%p
  Code coverage is an area where our support is evolving.
  We'd love to have your feedback about how we could support it better.
  != HAML.contact_us({wording: "Let us know"})
  how you're using it, how you'd like to use it, and what we could do better!
