- @title = "GitHub security and SSH keys"
- @lastUpdated = "May 1, 2013"

%p
  GitHub has two different SSH keys&mdash;a <i>deploy</i> key and a <i>user</i> key.
  When you add a GitHub repository to CircleCI, we automatically add a deploy
  key that references this repository.
  For most customers, this is all CircleCI needs to run their tests.

%p
  Each deploy key is valid for only <i>one</i> repository.
  In contrast, a GitHub user key has access to <i>all</i> of your GitHub repositories.

%p
  If your testing process refers to multiple repositories
  (if you have a Gemfile that points at a  private
  %code git
  repository, for example),
  CircleCI will be unable to check out such repositories with only a deploy key.
  When testing requires access to different repositories, CircleCI will need a GitHub user key.

%p
  You can provide CircleCI with a GitHub user key on your project's
  %strong
    Project Settings > Checkout SSH keys
  page.

  CircleCI creates and associates this new SSH key with your GitHub user account
  and then has access to all your repositories.


%h2#security User key security
%p
  CircleCI is serious when it comes to security.
  We will never make your SSH keys public.


%p
  Remember that SSH keys should be shared only with trusted users.
  Anyone that is a GitHub collaborator on a project employing user keys
  can access your repositories as you.
  Beware of someone stealing your code.


%h2#error-messages User key access-related error messages

%p
  Here are common errors that indicate you need to add a user key.

%p
  <b>Python</b>: During the
  %code pip install
  step:

%pre
  %code.no-highlight<>
    :preserve
      ERROR: Repository not found.

%p
  <b>Ruby</b>: During the
  %code bundle install
  step:


%pre
  %code.no-highlight<>
    :preserve
      Permission denied (publickey).

-# Added final mark to end the code highlighting
%p