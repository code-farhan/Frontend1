- @title = 'Continuous Integration and Continuous Deployment with Java'
- @short_title = 'Java'
- @lastUpdated = 'April 21, 2014'

%p
  Circle supports building Java applications using most common JDKs and build tools.
  Before each build, we look at your repository and infer commands to run, so most
  setups should work automatically.

  If your project has special requirements, you can augment or override inferred commands
  with a
  %a{href: "/docs/configuration"} circle.yml
  file.

%h3 Version

%p
  Circle has
  %a{href: "/docs/environment#java"} several versions of the Oracle JDK
  available. We use
  %code= CI.Versions.default_java_version
  as the default; if you'd like a particular version, you
  can specify it in your <code>circle.yml</code>

%h3 Dependencies & Tests

%p
  Circle supports ant, play, gradle, and maven out of the box.
  Depending on your build tooling, we will infer different commands:

%table.table
  %thead
    %tr
      %th Tool
      %th Dependency Resolution
      %th Testing
  %tbody
    %tr
      %td Maven
      %td
        %code mvn dependency:resolve
      %td
        %code mvn integration-test
    %tr
      %td Ant
      %td
      %td
        %code ant
    %tr
      %td Gradle
      %td
        %code gradle dependencies
      %td
        %code gradle test
    %tr
      %td Play
      %td
        %code play dependencies
      %td
        %code play test

%p
  You can easily customize inferred build commands in your <code>circle.yml</code>
  by setting the <code>override</code>, <code>pre</code>, <code>post</code> in the
  %a{href: "/docs/configuration#dependencies"} dependencies
  and
  %a{href: "/docs/configuration#test"} test
  sections.
